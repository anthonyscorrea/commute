{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": true,
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [],
   "source": [
    "import sqlite3\n",
    "import pandas as pd\n",
    "from IPython.display import display\n",
    "\n",
    "# Create the connection\n",
    "cnx = sqlite3.connect(r'../db/commute.sqlite')\n",
    "\n",
    "# create the dataframe from a query\n",
    "df=pd.read_sql_query(\"SELECT * FROM commute_with_homework_labels where work like '%Schaumburg%'\", cnx)\n",
    "\n",
    "df['duration']=pd.to_numeric(df['duration'])\n",
    "df['departure_time']=pd.to_datetime(df['departure']).dt.round('5min').dt.time\n",
    "\n",
    "def filter_home(df,s):\n",
    "    display(s)\n",
    "    return df[df['home'].str.contains(s)].groupby(['departure_time']).agg(['median','std'])/60"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": "'Kedvale'"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/gr/zz4phj5n33s6rp96x2cxfnlw0000gn/T/ipykernel_27671/1753499388.py:17: FutureWarning: ['origin', 'destination', 'departure', 'home', 'work'] did not aggregate successfully. If any error is raised this will raise in a future version of pandas. Drop these columns/ops to avoid this warning.\n",
      "  return df[df['home'].str.contains(s)].groupby(['departure_time']).agg(['median','std'])/60\n"
     ]
    },
    {
     "data": {
      "text/plain": "                 duration          \n                   median       std\ndeparture_time                     \n05:00:00        23.533333  1.542504\n05:15:00        23.783333  0.985905\n05:30:00        24.266667  2.243163\n05:45:00        25.933333  4.172560\n06:00:00        26.683333  4.400994\n06:15:00        29.916667  4.686334\n06:30:00        35.925000  4.225372\n06:45:00        38.366667  4.077236\n07:00:00        39.200000  4.434773\n07:15:00        41.883333  5.060429\n07:30:00        43.033333  5.185617\n07:45:00        43.275000  5.167552\n08:00:00        42.500000  4.946657\n08:15:00        41.533333  4.909415\n08:30:00        40.391667  4.660780\n08:45:00        38.775000  4.693818\n09:00:00        35.483333  4.446774\n09:15:00        31.166667  4.241139\n09:30:00        30.016667  3.898094\n09:45:00        29.408333  3.568214\n15:00:00        38.525000  5.482937\n15:15:00        41.616667  5.096790\n15:30:00        44.200000  4.621034\n15:45:00        45.500000  5.119982\n16:00:00        46.716667  5.750901\n16:15:00        48.416667  5.783722\n16:20:00        36.000000       NaN\n16:30:00        49.533333  5.819584\n16:45:00        51.358333  5.940984\n17:00:00        50.283333  6.047988\n17:15:00        51.033333  6.368920\n17:30:00        50.783333  6.363980\n17:45:00        48.641667  6.351801\n18:00:00        45.233333  6.342073\n18:15:00        42.500000  6.171878\n18:30:00        38.900000  6.359466\n18:45:00        35.508333  6.158137",
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead tr th {\n        text-align: left;\n    }\n\n    .dataframe thead tr:last-of-type th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr>\n      <th></th>\n      <th colspan=\"2\" halign=\"left\">duration</th>\n    </tr>\n    <tr>\n      <th></th>\n      <th>median</th>\n      <th>std</th>\n    </tr>\n    <tr>\n      <th>departure_time</th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>05:00:00</th>\n      <td>23.533333</td>\n      <td>1.542504</td>\n    </tr>\n    <tr>\n      <th>05:15:00</th>\n      <td>23.783333</td>\n      <td>0.985905</td>\n    </tr>\n    <tr>\n      <th>05:30:00</th>\n      <td>24.266667</td>\n      <td>2.243163</td>\n    </tr>\n    <tr>\n      <th>05:45:00</th>\n      <td>25.933333</td>\n      <td>4.172560</td>\n    </tr>\n    <tr>\n      <th>06:00:00</th>\n      <td>26.683333</td>\n      <td>4.400994</td>\n    </tr>\n    <tr>\n      <th>06:15:00</th>\n      <td>29.916667</td>\n      <td>4.686334</td>\n    </tr>\n    <tr>\n      <th>06:30:00</th>\n      <td>35.925000</td>\n      <td>4.225372</td>\n    </tr>\n    <tr>\n      <th>06:45:00</th>\n      <td>38.366667</td>\n      <td>4.077236</td>\n    </tr>\n    <tr>\n      <th>07:00:00</th>\n      <td>39.200000</td>\n      <td>4.434773</td>\n    </tr>\n    <tr>\n      <th>07:15:00</th>\n      <td>41.883333</td>\n      <td>5.060429</td>\n    </tr>\n    <tr>\n      <th>07:30:00</th>\n      <td>43.033333</td>\n      <td>5.185617</td>\n    </tr>\n    <tr>\n      <th>07:45:00</th>\n      <td>43.275000</td>\n      <td>5.167552</td>\n    </tr>\n    <tr>\n      <th>08:00:00</th>\n      <td>42.500000</td>\n      <td>4.946657</td>\n    </tr>\n    <tr>\n      <th>08:15:00</th>\n      <td>41.533333</td>\n      <td>4.909415</td>\n    </tr>\n    <tr>\n      <th>08:30:00</th>\n      <td>40.391667</td>\n      <td>4.660780</td>\n    </tr>\n    <tr>\n      <th>08:45:00</th>\n      <td>38.775000</td>\n      <td>4.693818</td>\n    </tr>\n    <tr>\n      <th>09:00:00</th>\n      <td>35.483333</td>\n      <td>4.446774</td>\n    </tr>\n    <tr>\n      <th>09:15:00</th>\n      <td>31.166667</td>\n      <td>4.241139</td>\n    </tr>\n    <tr>\n      <th>09:30:00</th>\n      <td>30.016667</td>\n      <td>3.898094</td>\n    </tr>\n    <tr>\n      <th>09:45:00</th>\n      <td>29.408333</td>\n      <td>3.568214</td>\n    </tr>\n    <tr>\n      <th>15:00:00</th>\n      <td>38.525000</td>\n      <td>5.482937</td>\n    </tr>\n    <tr>\n      <th>15:15:00</th>\n      <td>41.616667</td>\n      <td>5.096790</td>\n    </tr>\n    <tr>\n      <th>15:30:00</th>\n      <td>44.200000</td>\n      <td>4.621034</td>\n    </tr>\n    <tr>\n      <th>15:45:00</th>\n      <td>45.500000</td>\n      <td>5.119982</td>\n    </tr>\n    <tr>\n      <th>16:00:00</th>\n      <td>46.716667</td>\n      <td>5.750901</td>\n    </tr>\n    <tr>\n      <th>16:15:00</th>\n      <td>48.416667</td>\n      <td>5.783722</td>\n    </tr>\n    <tr>\n      <th>16:20:00</th>\n      <td>36.000000</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>16:30:00</th>\n      <td>49.533333</td>\n      <td>5.819584</td>\n    </tr>\n    <tr>\n      <th>16:45:00</th>\n      <td>51.358333</td>\n      <td>5.940984</td>\n    </tr>\n    <tr>\n      <th>17:00:00</th>\n      <td>50.283333</td>\n      <td>6.047988</td>\n    </tr>\n    <tr>\n      <th>17:15:00</th>\n      <td>51.033333</td>\n      <td>6.368920</td>\n    </tr>\n    <tr>\n      <th>17:30:00</th>\n      <td>50.783333</td>\n      <td>6.363980</td>\n    </tr>\n    <tr>\n      <th>17:45:00</th>\n      <td>48.641667</td>\n      <td>6.351801</td>\n    </tr>\n    <tr>\n      <th>18:00:00</th>\n      <td>45.233333</td>\n      <td>6.342073</td>\n    </tr>\n    <tr>\n      <th>18:15:00</th>\n      <td>42.500000</td>\n      <td>6.171878</td>\n    </tr>\n    <tr>\n      <th>18:30:00</th>\n      <td>38.900000</td>\n      <td>6.359466</td>\n    </tr>\n    <tr>\n      <th>18:45:00</th>\n      <td>35.508333</td>\n      <td>6.158137</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "s=\"Chicago\"\n",
    "display(filter_home(df, s))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": "'Howard'"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/gr/zz4phj5n33s6rp96x2cxfnlw0000gn/T/ipykernel_27671/1753499388.py:17: FutureWarning: ['origin', 'destination', 'departure', 'home', 'work'] did not aggregate successfully. If any error is raised this will raise in a future version of pandas. Drop these columns/ops to avoid this warning.\n",
      "  return df[df['home'].str.contains(s)].groupby(['departure_time']).agg(['median','std'])/60\n"
     ]
    },
    {
     "data": {
      "text/plain": "                 duration          \n                   median       std\ndeparture_time                     \n05:00:00        37.033333  1.510588\n05:15:00        37.833333  1.514266\n05:30:00        38.700000  1.621523\n05:45:00        39.808333  1.651970\n06:00:00        41.008333  1.735052\n06:15:00        42.000000  1.572903\n06:30:00        42.800000  1.726340\n06:45:00        44.216667  2.138917\n07:00:00        45.716667  2.320648\n07:15:00        46.200000  2.403210\n07:30:00        46.675000  2.457227\n07:45:00        47.150000  2.793890\n08:00:00        47.658333  3.113945\n08:15:00        47.208333  2.973484\n08:30:00        46.975000  3.080008\n08:45:00        46.150000  2.952791\n09:00:00        45.133333  2.475338\n09:15:00        44.266667  2.236110\n09:30:00        44.083333  1.867953\n09:45:00        44.016667  1.791629\n15:00:00        51.391667  2.805142\n15:15:00        52.175000  2.538775\n15:30:00        52.650000  2.507252\n15:45:00        53.366667  2.594847\n16:00:00        53.466667  2.942852\n16:15:00        54.250000  3.351964\n16:20:00        57.666667  4.973318\n16:30:00        55.100000  3.385237\n16:45:00        56.325000  3.270977\n17:00:00        56.633333  3.571407\n17:15:00        57.666667  3.831777\n17:30:00        57.350000  4.122697\n17:45:00        55.808333  4.424263\n18:00:00        53.216667  3.424057\n18:15:00        50.566667  2.935303\n18:30:00        48.916667  2.647352\n18:45:00        46.950000  2.431097",
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead tr th {\n        text-align: left;\n    }\n\n    .dataframe thead tr:last-of-type th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr>\n      <th></th>\n      <th colspan=\"2\" halign=\"left\">duration</th>\n    </tr>\n    <tr>\n      <th></th>\n      <th>median</th>\n      <th>std</th>\n    </tr>\n    <tr>\n      <th>departure_time</th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>05:00:00</th>\n      <td>37.033333</td>\n      <td>1.510588</td>\n    </tr>\n    <tr>\n      <th>05:15:00</th>\n      <td>37.833333</td>\n      <td>1.514266</td>\n    </tr>\n    <tr>\n      <th>05:30:00</th>\n      <td>38.700000</td>\n      <td>1.621523</td>\n    </tr>\n    <tr>\n      <th>05:45:00</th>\n      <td>39.808333</td>\n      <td>1.651970</td>\n    </tr>\n    <tr>\n      <th>06:00:00</th>\n      <td>41.008333</td>\n      <td>1.735052</td>\n    </tr>\n    <tr>\n      <th>06:15:00</th>\n      <td>42.000000</td>\n      <td>1.572903</td>\n    </tr>\n    <tr>\n      <th>06:30:00</th>\n      <td>42.800000</td>\n      <td>1.726340</td>\n    </tr>\n    <tr>\n      <th>06:45:00</th>\n      <td>44.216667</td>\n      <td>2.138917</td>\n    </tr>\n    <tr>\n      <th>07:00:00</th>\n      <td>45.716667</td>\n      <td>2.320648</td>\n    </tr>\n    <tr>\n      <th>07:15:00</th>\n      <td>46.200000</td>\n      <td>2.403210</td>\n    </tr>\n    <tr>\n      <th>07:30:00</th>\n      <td>46.675000</td>\n      <td>2.457227</td>\n    </tr>\n    <tr>\n      <th>07:45:00</th>\n      <td>47.150000</td>\n      <td>2.793890</td>\n    </tr>\n    <tr>\n      <th>08:00:00</th>\n      <td>47.658333</td>\n      <td>3.113945</td>\n    </tr>\n    <tr>\n      <th>08:15:00</th>\n      <td>47.208333</td>\n      <td>2.973484</td>\n    </tr>\n    <tr>\n      <th>08:30:00</th>\n      <td>46.975000</td>\n      <td>3.080008</td>\n    </tr>\n    <tr>\n      <th>08:45:00</th>\n      <td>46.150000</td>\n      <td>2.952791</td>\n    </tr>\n    <tr>\n      <th>09:00:00</th>\n      <td>45.133333</td>\n      <td>2.475338</td>\n    </tr>\n    <tr>\n      <th>09:15:00</th>\n      <td>44.266667</td>\n      <td>2.236110</td>\n    </tr>\n    <tr>\n      <th>09:30:00</th>\n      <td>44.083333</td>\n      <td>1.867953</td>\n    </tr>\n    <tr>\n      <th>09:45:00</th>\n      <td>44.016667</td>\n      <td>1.791629</td>\n    </tr>\n    <tr>\n      <th>15:00:00</th>\n      <td>51.391667</td>\n      <td>2.805142</td>\n    </tr>\n    <tr>\n      <th>15:15:00</th>\n      <td>52.175000</td>\n      <td>2.538775</td>\n    </tr>\n    <tr>\n      <th>15:30:00</th>\n      <td>52.650000</td>\n      <td>2.507252</td>\n    </tr>\n    <tr>\n      <th>15:45:00</th>\n      <td>53.366667</td>\n      <td>2.594847</td>\n    </tr>\n    <tr>\n      <th>16:00:00</th>\n      <td>53.466667</td>\n      <td>2.942852</td>\n    </tr>\n    <tr>\n      <th>16:15:00</th>\n      <td>54.250000</td>\n      <td>3.351964</td>\n    </tr>\n    <tr>\n      <th>16:20:00</th>\n      <td>57.666667</td>\n      <td>4.973318</td>\n    </tr>\n    <tr>\n      <th>16:30:00</th>\n      <td>55.100000</td>\n      <td>3.385237</td>\n    </tr>\n    <tr>\n      <th>16:45:00</th>\n      <td>56.325000</td>\n      <td>3.270977</td>\n    </tr>\n    <tr>\n      <th>17:00:00</th>\n      <td>56.633333</td>\n      <td>3.571407</td>\n    </tr>\n    <tr>\n      <th>17:15:00</th>\n      <td>57.666667</td>\n      <td>3.831777</td>\n    </tr>\n    <tr>\n      <th>17:30:00</th>\n      <td>57.350000</td>\n      <td>4.122697</td>\n    </tr>\n    <tr>\n      <th>17:45:00</th>\n      <td>55.808333</td>\n      <td>4.424263</td>\n    </tr>\n    <tr>\n      <th>18:00:00</th>\n      <td>53.216667</td>\n      <td>3.424057</td>\n    </tr>\n    <tr>\n      <th>18:15:00</th>\n      <td>50.566667</td>\n      <td>2.935303</td>\n    </tr>\n    <tr>\n      <th>18:30:00</th>\n      <td>48.916667</td>\n      <td>2.647352</td>\n    </tr>\n    <tr>\n      <th>18:45:00</th>\n      <td>46.950000</td>\n      <td>2.431097</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(filter_home(df, 'Evanston'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": "'Fry'"
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/gr/zz4phj5n33s6rp96x2cxfnlw0000gn/T/ipykernel_27671/1753499388.py:17: FutureWarning: ['origin', 'destination', 'departure', 'home', 'work'] did not aggregate successfully. If any error is raised this will raise in a future version of pandas. Drop these columns/ops to avoid this warning.\n",
      "  return df[df['home'].str.contains(s)].groupby(['departure_time']).agg(['median','std'])/60\n"
     ]
    },
    {
     "data": {
      "text/plain": "                 duration           \n                   median        std\ndeparture_time                      \n05:00:00        29.116667   2.249474\n05:15:00        29.583333   2.299251\n05:30:00        30.166667   3.393924\n05:45:00        31.458333   4.594197\n06:00:00        32.900000   5.062941\n06:15:00        37.691667   5.730923\n06:30:00        47.333333   6.896430\n06:45:00        52.308333   8.024994\n07:00:00        53.425000   9.074116\n07:15:00        55.450000   9.732968\n07:30:00        57.025000   9.779528\n07:45:00        56.166667   9.349908\n08:00:00        54.350000   9.040519\n08:15:00        52.291667   8.352707\n08:30:00        50.108333   7.696300\n08:45:00        46.316667   6.889973\n09:00:00        41.933333   5.715794\n09:15:00        37.766667   4.660893\n09:30:00        36.533333   4.188227\n09:45:00        35.966667   3.952642\n15:00:00        56.441667   9.385209\n15:15:00        58.558333   9.272816\n15:30:00        61.500000   8.921497\n15:45:00        64.400000   8.848769\n16:00:00        66.000000   9.123922\n16:15:00        67.133333   9.530303\n16:20:00        66.733333  19.139024\n16:30:00        69.783333  10.114449\n16:45:00        71.641667   9.796720\n17:00:00        70.116667   9.778377\n17:15:00        70.183333   9.818618\n17:30:00        70.500000  10.225735\n17:45:00        67.433333   9.623043\n18:00:00        63.591667   9.249410\n18:15:00        58.633333   8.919464\n18:30:00        54.083333   8.857015\n18:45:00        49.000000   8.260151",
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead tr th {\n        text-align: left;\n    }\n\n    .dataframe thead tr:last-of-type th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr>\n      <th></th>\n      <th colspan=\"2\" halign=\"left\">duration</th>\n    </tr>\n    <tr>\n      <th></th>\n      <th>median</th>\n      <th>std</th>\n    </tr>\n    <tr>\n      <th>departure_time</th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>05:00:00</th>\n      <td>29.116667</td>\n      <td>2.249474</td>\n    </tr>\n    <tr>\n      <th>05:15:00</th>\n      <td>29.583333</td>\n      <td>2.299251</td>\n    </tr>\n    <tr>\n      <th>05:30:00</th>\n      <td>30.166667</td>\n      <td>3.393924</td>\n    </tr>\n    <tr>\n      <th>05:45:00</th>\n      <td>31.458333</td>\n      <td>4.594197</td>\n    </tr>\n    <tr>\n      <th>06:00:00</th>\n      <td>32.900000</td>\n      <td>5.062941</td>\n    </tr>\n    <tr>\n      <th>06:15:00</th>\n      <td>37.691667</td>\n      <td>5.730923</td>\n    </tr>\n    <tr>\n      <th>06:30:00</th>\n      <td>47.333333</td>\n      <td>6.896430</td>\n    </tr>\n    <tr>\n      <th>06:45:00</th>\n      <td>52.308333</td>\n      <td>8.024994</td>\n    </tr>\n    <tr>\n      <th>07:00:00</th>\n      <td>53.425000</td>\n      <td>9.074116</td>\n    </tr>\n    <tr>\n      <th>07:15:00</th>\n      <td>55.450000</td>\n      <td>9.732968</td>\n    </tr>\n    <tr>\n      <th>07:30:00</th>\n      <td>57.025000</td>\n      <td>9.779528</td>\n    </tr>\n    <tr>\n      <th>07:45:00</th>\n      <td>56.166667</td>\n      <td>9.349908</td>\n    </tr>\n    <tr>\n      <th>08:00:00</th>\n      <td>54.350000</td>\n      <td>9.040519</td>\n    </tr>\n    <tr>\n      <th>08:15:00</th>\n      <td>52.291667</td>\n      <td>8.352707</td>\n    </tr>\n    <tr>\n      <th>08:30:00</th>\n      <td>50.108333</td>\n      <td>7.696300</td>\n    </tr>\n    <tr>\n      <th>08:45:00</th>\n      <td>46.316667</td>\n      <td>6.889973</td>\n    </tr>\n    <tr>\n      <th>09:00:00</th>\n      <td>41.933333</td>\n      <td>5.715794</td>\n    </tr>\n    <tr>\n      <th>09:15:00</th>\n      <td>37.766667</td>\n      <td>4.660893</td>\n    </tr>\n    <tr>\n      <th>09:30:00</th>\n      <td>36.533333</td>\n      <td>4.188227</td>\n    </tr>\n    <tr>\n      <th>09:45:00</th>\n      <td>35.966667</td>\n      <td>3.952642</td>\n    </tr>\n    <tr>\n      <th>15:00:00</th>\n      <td>56.441667</td>\n      <td>9.385209</td>\n    </tr>\n    <tr>\n      <th>15:15:00</th>\n      <td>58.558333</td>\n      <td>9.272816</td>\n    </tr>\n    <tr>\n      <th>15:30:00</th>\n      <td>61.500000</td>\n      <td>8.921497</td>\n    </tr>\n    <tr>\n      <th>15:45:00</th>\n      <td>64.400000</td>\n      <td>8.848769</td>\n    </tr>\n    <tr>\n      <th>16:00:00</th>\n      <td>66.000000</td>\n      <td>9.123922</td>\n    </tr>\n    <tr>\n      <th>16:15:00</th>\n      <td>67.133333</td>\n      <td>9.530303</td>\n    </tr>\n    <tr>\n      <th>16:20:00</th>\n      <td>66.733333</td>\n      <td>19.139024</td>\n    </tr>\n    <tr>\n      <th>16:30:00</th>\n      <td>69.783333</td>\n      <td>10.114449</td>\n    </tr>\n    <tr>\n      <th>16:45:00</th>\n      <td>71.641667</td>\n      <td>9.796720</td>\n    </tr>\n    <tr>\n      <th>17:00:00</th>\n      <td>70.116667</td>\n      <td>9.778377</td>\n    </tr>\n    <tr>\n      <th>17:15:00</th>\n      <td>70.183333</td>\n      <td>9.818618</td>\n    </tr>\n    <tr>\n      <th>17:30:00</th>\n      <td>70.500000</td>\n      <td>10.225735</td>\n    </tr>\n    <tr>\n      <th>17:45:00</th>\n      <td>67.433333</td>\n      <td>9.623043</td>\n    </tr>\n    <tr>\n      <th>18:00:00</th>\n      <td>63.591667</td>\n      <td>9.249410</td>\n    </tr>\n    <tr>\n      <th>18:15:00</th>\n      <td>58.633333</td>\n      <td>8.919464</td>\n    </tr>\n    <tr>\n      <th>18:30:00</th>\n      <td>54.083333</td>\n      <td>8.857015</td>\n    </tr>\n    <tr>\n      <th>18:45:00</th>\n      <td>49.000000</td>\n      <td>8.260151</td>\n    </tr>\n  </tbody>\n</table>\n</div>"
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "display(filter_home(df, \"Joliet\"))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}